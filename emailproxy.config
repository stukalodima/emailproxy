[Email OAuth 2.0 Proxy configuration file]
documentation = Це зразок файлу конфігурації електронної пошти OAuth 2.0 Proxy. Налаштуйте проксі, додавши елементи в
	[Server setup] та [Account setup]. Використовуйте меню «Перезавантажити файл конфігурації» або виконайте команду
	SIGHUP (або закрийте проксі перед редагуванням, а потім перезапустіть), щоб застосувати будь-які зміни.

[Server setup]
documentation = Локальні сервери вказуються, як показано нижче. Наприклад, заголовок розділу [IMAP-1993] вказує тип
    (який може бути IMAP, POP або SMTP) і номер локального порту для прослуховування (наприклад, 1993 тощо). Локальний
    порт має бути вище 1023 (якщо сценарій проксі-сервера не запускається через sudo), менше 65536 і бути унікальним
    для локальних серверів.
    Однак кілька облікових записів можуть використовувати один сервер. Кожен розділ сервера має вказати `server_address`
    і `server_port` віддаленого сервера, ви можете отримати ці значення від свого постачальника електронної пошти,
    або скористайтеся наведеними нижче відомостями для Office 365

	Щоб проксі-сервер міг працювати, ваш поштовий клієнт має бути налаштований на використання незашифрованого з’єднання
	для IMAP/SMTP/POP (тобто без STARTTLS або SSL/TLS, лише звичайні облікові дані для входу). Проксі створить безпечне
	з’єднання на вашому сервері від імені віддаленого сервера.

	Налаштування сервера:
	- Якщо ваш SMTP-сервер використовує підхід STARTTLS, додайте `server_starttls = True`, як показано у прикладі
	[SMTP-1587] нижче (інакше вважається False). З цим параметром узгодження STARTTLS оброблятиметься проксі-сервером
    від вашого імені (тобто не вмикайте STARTTLS у вашому клієнті). IMAP/POP STARTTLS наразі не підтримуються.

	- Властивість `local_address` можна використовувати для встановлення IP-адреси або імені хоста для прослуховування проксі.
	Обидва IPv4 і IPv6 підтримуються. Якщо не вказано, це значення має значення `::` (тобто подвійний стек IPv4/IPv6 на всіх інтерфейсах).
    Коли встановлено ім’я хоста, проксі-сервер спочатку визначить IP-адресу, віддаючи перевагу IPv6 над IPv4, якщо обидва є
    доступними. Під час роботи в середовищі IPv6 із підтримкою подвійного стеку проксі намагатиметься слухати обидва
    IPv4 та IPv6 хости одночасно. Зауважте, що такі інструменти, як `netstat`, не завжди точно показують режим подвійного стеку;
    якщо у вас виникають проблеми з підключенням до проксі-сервера, варто перевірити з’єднання IPv4 і IPv6.

	Розширена конфігурація сервера:
	- Як пояснювалося вище, вам не слід вмикати STARTTLS у вашому локальному клієнті, оскільки проксі обробляє безпечний зв’язок
    з сервером від вашого імені. Однак, якщо ваш клієнт не дозволяє вимкнути STARTTLS, ви можете додатково
    встановити `local_starttls = True`, щоб емулювати STARTTLS локально, щоб дозволити вашому клієнту підключатися. Якщо встановити цей параметр,
    ви також повинні надати місцевий сертифікат, як зазначено нижче.

	- У стандартній конфігурації канал між клієнтом електронної пошти та проксі-сервером незашифрований. Зазвичай не викликає проблем,
	оскільки проксі зазвичай є лише локальною службою. Однак, якщо ви бажаєте, ви можете надати
    `local_certificate_path` (наприклад, /etc/letsencrypt/live/mail.example.net/fullchain.pem) і `local_key_path` (наприклад,
    /etc/letsencrypt/live/mail.example.net/privkey.pem) для сервера, з яким ви використовуєте проксі, і він використовуватиме
    ці файли для встановлення безпечного з’єднання між собою та вашим клієнтом електронної пошти.

[IMAP-1993]
server_address = outlook.office365.com
server_port = 993
local_address = 127.0.0.1

[POP-1995]
server_address = outlook.office365.com
server_port = 995
local_address = 127.0.0.1

[SMTP-1587]
server_address = smtp-mail.outlook.com
server_port = 587
server_starttls = True
local_address = 127.0.0.1

[Account setup]
documentation = Облікові записи вказуються за допомогою вашої адреси електронної пошти як заголовка розділу (наприклад
    [your.email@domain.com]). Імена користувачів облікових записів (тобто адреси електронної пошти) мають бути унікальними
    – для кожного облікового запису дозволяється лише один запис.
    Кожен розділ облікового запису має надавати значення принаймні для `token_url`, `oauth2_scope` та `client_id`. Залежно від
    OAuth 2.0, який ви використовуєте, також можуть знадобитися інші значення (див. приклади нижче).

	Вам також потрібно буде додати власні значення `client_id` і `client_secret`, як зазначено нижче. Вони можуть бути будь-якими
    і повторно використовуватися з існуючого джерела (наприклад, інший клієнт електронної пошти, який підтримує OAuth 2.0),
    або ви можете зареєструватися та використовувати ваші облікові дані клієнта API для настільних програм.
    Кілька облікових записів на одному сервері можуть використовувати однакові значення для властивості `client_id`
    і `client_secret`; просто скопіюйте їх у кожному записі облікового запису нижче або перегляньте додаткові
    параметр `allow_catch_all_accounts`.

	Після того, як проксі-сервер буде правильно налаштовано, після першого успішного використання облікового запису його
	деталі маркера доступу з’являться в кеш-пам’яті для майбутнього використання, зашифрований за допомогою пароля
	IMAP/POP/SMTP, який ви використовували у своєму поштовому клієнті. За замовчуванням це файл конфігурації який
	використовується для кешування (тому він має бути доступним для запису), але ви можете вказати інше розташування або
    метод із використанням параметра `--cache-store` проксі. Не слід додавати або редагувати кешовані значення вручну (тобто
    `token_salt`, `access_token`, `access_token_expiry`, `refresh_token` і `last_activity`) проксі обробляє сам.

	Пароль, який використовується у вашому клієнті електронної пошти, не використовується для автентифікації на фактичному
	сервері електронної пошти (це робиться через OAuth 2.0 у веб-браузері), тому він може відрізнятися від пароля реального
	облікового запису, що корисно для налагодження.
    Однак зауважте, що всі клієнти, які використовують певний обліковий запис через проксі, повинні використовувати той самий IMAP/POP/SMTP
    пароль, щоб уникнути повторних запитів на повторну автентифікацію (це поведінка проксі за умовчанням, коли облікові дані
    дешифрування не вдається). Перегляньте файл README.md проксі для отримання додаткової інформації.

	Office 365 налаштування:
	- На відміну від інших постачальників, для Office 365 потрібна область дії OAuth 2.0, у якій явно вказано `offline_access` (показано
    у прикладі нижче), щоб дозволити проксі-серверу оновити свій маркер доступу від вашого імені. Проксі все одно буде
    працювати, якщо цей параметр не включено, але вам потрібно буде проходити повторну автентифікацію надзвичайно
    часто (приблизно раз на годину).

	- Наведені нижче приклади записів конфігурації Office 365 використовують область OAuth 2.0, яка чітко визначає IMAP, POP і
    SMTP. Якщо вам не потрібен один або кілька з цих протоколів, ви можете видалити відповідні значення, щоб забезпечити
    токени доступу, отримані від вашого імені, максимально точно націлені. І навпаки, також можна
    замініть ці конкретні області більш загальним `https://outlook.office365.com/.default`. Перехід до ширшого
    значення scope також може знадобитися, якщо ви використовуєте версію O365 від регіонального постачальника

	- За замовчуванням нові клієнти Entra (Azure AD) доступні лише у вашому власному клієнті. Якщо ви реєструєте новий
    клієнт для використання з проксі (і не хочете, щоб він був доступний за межами вашої організації), вам знадобиться
    замінить `common` на свій ідентифікатор клієнта в значеннях Office 365 `permission_url` і `token_url` нижче. Як альтернатива,
    ви можете повторно використовувати облікові дані з наявної реєстрації клієнта (перегляньте файл README.md проксі-сервера)
    або налаштувати свій клієнт як багатокористувацький додаток. Щоб отримати докладніші відомості про це, а також посібники
    з налаштування клієнта програми для настільних ПК,перегляньте документацію за адресою
    https://learn.microsoft.com/en-us/entra/identity-platform/quickstart-register-app.

	- Підтримуються спільні поштові скриньки Office 365: додайте сюди запис облікового запису, використовуючи адресу
	електронної пошти спільного доступу як назву облікового запису. Коли буде запропоновано пройти автентифікацію,
	увійдіть як користувач, якому делеговано доступ.
    Зауважте, що Office 365 більше не підтримує синтаксис імені користувача `authorised.user@example.com/delegated.mailbox`.

	- Можна створювати клієнти Office 365, для яких не потрібно надсилати секрет. Якщо це ваш випадок
    налаштування, видаліть рядок `client_secret` із запису конфігурації вашого облікового запису (не залишайте значення за умовчанням).

	- Щоб використовувати облікові дані сертифіката O365 замість секрету клієнта, видаліть рядок `client_secret` і натомість
    надайте `jwt_certificate_path` (наприклад, /path/to/certificate.pem) і `jwt_key_path` (наприклад, /path/to/key.pem).

	- Проксі-сервер підтримує надання облікових даних клієнта (CCG) і надання облікових даних власника ресурсу (ROPCG) OAuth
    потоки 2.0 (наразі відомо, що обидва доступні лише для Office 365). Щоб використовувати будь-який із цих потоків, додайте обліковий запис
    запис як зазвичай, але не додавайте значення `permission_url` (воно не застосовується, і його відсутність сигналізує проксі
    використовувати відповідний механізм пошуку токенів). Для CCG встановіть `oauth2_scope = https://outlook.office365.com/.default`
    і `oauth2_flow = client_credentials`. Для ROPCG встановіть `oauth2_flow = пароль` (і використовуйте стандартне значення області).
    Наприклад для обох методів наведено в кінці прикладу записів облікового запису нижче.

		- ПОПЕРЕДЖЕННЯ. Зауважте, що за умовчанням потік CCG фактично не має локального контролю доступу під час створення нових
        облікових записів (згода користувача не вимагається, тому проксі-сервер не може перевірити спроби входу, якщо не введено обліковий запис
        файл конфігурації вже існує). Використання потоку CCG із проксі-сервером у загальнодоступному контексті
        не рекомендується. Це особливо важливо, коли використовується функція проксі-сервера, що охоплює все (яка, ймовірно, буде
        з урахуванням типових варіантів використання потоку CCG). Через це вам рекомендується ввімкнути
        параметр секретного шифрування проксі - див. `encrypt_client_secret_on_first_use` в кінці цього файлу.
        І крім того, якщо ви використовуєте проксі-сервер у середовищі, де існує будь-яка ймовірність зловмисного доступу
        спроб перед першим дійсним входом, настійно рекомендується попереднє шифрування записів облікового запису.

[your.office365.address@example.com]
permission_url = https://login.microsoftonline.com/common/oauth2/v2.0/authorize
token_url = https://login.microsoftonline.com/common/oauth2/v2.0/token
oauth2_scope = https://outlook.office.com/IMAP.AccessAsUser.All https://outlook.office.com/POP.AccessAsUser.All https://outlook.office.com/SMTP.Send offline_access
redirect_uri = http://localhost
client_id = *** your client id here ***
client_secret = *** your client secret here ***

[your.free.outlook.or.hotmail.address@outlook.com]
permission_url = https://login.microsoftonline.com/common/oauth2/v2.0/authorize
token_url = https://login.microsoftonline.com/common/oauth2/v2.0/token
oauth2_scope = https://outlook.office.com/IMAP.AccessAsUser.All https://outlook.office.com/POP.AccessAsUser.All https://outlook.office.com/SMTP.Send offline_access
client_id = *** your client id here - note that as you are not the administrator of Hotmail.com / Outlook.com, you will need to reuse an existing client ID (see the proxy's readme) ***
redirect_uri = https://localhost

[ccg.flow.configured.address@your-tenant.com]
documentation = *** примітка: це розширений приклад облікового запису O365; у більшості випадків вам потрібна версія нище ***
token_url = https://login.microsoftonline.com/*** your tenant id here ***/oauth2/v2.0/token
oauth2_scope = https://outlook.office365.com/.default
oauth2_flow = client_credentials
client_id = *** your client id here ***
client_secret = *** your client secret here ***

[ropcg.flow.configured.address@your-tenant.com]
documentation = *** примітка: це розширений приклад облікового запису O365; у більшості випадків вам потрібна версія нище ***
token_url = https://login.microsoftonline.com/*** your tenant id here ***/oauth2/v2.0/token
oauth2_scope = https://outlook.office365.com/IMAP.AccessAsUser.All https://outlook.office365.com/POP.AccessAsUser.All https://outlook.office365.com/SMTP.Send offline_access
oauth2_flow = password
client_id = *** your client id here ***
client_secret = *** your client secret here ***

[Advanced proxy configuration]
documentation = Наведені нижче параметри керують розширеними параметрами для проксі. У більшості випадків вам не потрібно буде змінювати
    значення в цьому розділі. Якщо жодне з цих значень не знайдено, проксі прийме значення за замовчуванням

	Параметри:
	- delete_account_token_on_password_error (default = True): Після автентифікації облікового запису через проксі, якщо
    є спроба входу з іншим (локальним) паролем, типовою поведінкою є видалення збереженого OAuth 2.0 токену
    Це розумне значення за умовчанням для локального використання, оскільки це означає, що помилка в паролі не створює
    хибного враження, що проксі-сервер якимось чином зробив обліковий запис недоступним. однак,
    якщо проксі використовується не в графічному інтерфейсі (часто також загальнодоступному) контексті, де потоки автентифікації,
    швидше за все, будуть трудомістким або потребуватимуть втручання адміністратора, це потенційно може призвести до проблеми
    відмови в обслуговуванні. Це також може бути джерелом плутанини, якщо використовується клієнт, який зберігає окремі файли
    пароль для кожного протоколу для кожного облікового запису, але не вказує на це під час зміни паролів облікових записів.
    Встановіть це значення False, і проксі-сервер натомість повертатиме помилку, якщо буде вказано неправильний пароль. Для обліковок які авторизуються
    за допомогою потоку O365 CCG цей параметр буде замінено та завжди встановлено значення False.

	- encrypt_client_secret_on_first_use (default = False): Проксі-сервер шифрує конфіденційні значення конфігурації (наприклад,
    кешовані маркери доступу), використовуючи пароль, який надається під час доступу до облікового запису через IMAP/POP/SMTP.
    У найпоширенішому режимі роботи (тобто інтерактивна авторизація облікового запису), значення `client_secret` потрапляє
    в цю категорію - воно насправді не є секретним, і в ньому немає справжньої потреби щоб запобігти доступу до нього.
    Однак під час використання потоку надання облікових даних клієнта (CCG) володіння секретом надає повний доступ до облікового запису.
    Якщо ви використовуєте один із цих методів і можливо, що інші можуть отримати доступ до конфігураційного файлу проксі - встановіть
    для `encrypt_client_secret_on_first_use` значення True, і проксі замінить значення `client_secret` новою властивістю `client_secret_encrypted`
    під час наступного оновлення маркера. Зверніть увагу, що цей варіант не повністю сумісний з `allow_catch_all_accounts`,
    якщо всі облікові записи не використовують однаковий пароль для входу або ви
    використовуєте додаткову конфігурацію вручну (подробиці див. нижче).
    Зокрема, якщо ви налаштували catch-all або параметр `--cache-store` проксі-сервера, ви повинні вручну видалити незашифровані секрети з
    локальних конфігураційних файлів після створення зашифрованого секрету (тобто це не буде автоматично).

	- use_login_password_as_client_credentials_secret (default = False): Під час використання надання облікових даних клієнта O365
    (CCG), замість шифрування секрету клієнта (див. вище), проксі-серверу можна наказати використовувати заданий
    Пароль для входу IMAP/POP/SMTP як секрет клієнта. Такий підхід усуває ризик зберігання незашифрованого клієнта
    у файлі конфігурації проксі-сервера, а також означає відсутність ризику неавторизованого доступу до облікового запису під час використання
    потоку O365 CCG у поєднанні з режимом catch-all проксі (див. нижче). Щоб увімкнути цю опцію, встановіть
    `use_login_password_as_client_credentials_secret` значення True. Зауважте, що якщо значення `client_secret` присутнє у вашому
    записі конфігурації облікового запису, це значення використовуватиметься замість заданого пароля для входу IMAP/POP/SMTP, навіть якщо
    ця опція включена. Щоб уникнути цього, видаліть весь рядок `client_secret` із запису конфігурації.

	- allow_catch_all_accounts (default = False): Поведінка за замовчуванням проксі-сервера вимагає повного відокремлення
    запис файлу конфігурації для кожного облікового запису. Однак при використанні кількох облікових записів з одного домену це може бути
    громіздко створювати кілька майже ідентичних профілів конфігурації. Щоб спростити це, проксі підтримує
    облікові записи для всіх облікових записів, якщо для цього параметра встановлено значення True. Облікові записи на рівні домену налаштовуються за допомогою заголовків розділів.
    Наприклад, додайте розділ [@domain.com] із усіма стандартними обов’язковими значеннями облікового запису, і проксі-сервер перехопить
    запити автентифікації для всіх імен користувачів на `domain.com`. Щоразу, коли раніше невидимий обліковий запис намагається підключитися,
    авторизація облікового запису відбуватиметься як зазвичай, і проксі автоматично створить новий розділ на рівні облікового запису
    який не потрібно налаштовувати вручну. Будь-яка конфігурація на рівні облікового запису замінить значення на рівні домену
    (за винятком доступу до облікового запису та маркерів оновлення). За потреби також можна використати глобальний розділ [@]. Будь ласка
    зауважте, що цей параметр не повністю сумісний із `encrypt_client_secret_on_first_use`, якщо тільки всі IMAP/POP/SMTP
    облікові записи в одному домені використовують той самий пароль, або ви виконуєте додаткові кроки налаштування вручну

[emailproxy]
delete_account_token_on_password_error = True
encrypt_client_secret_on_first_use = False
use_login_password_as_client_credentials_secret = False
allow_catch_all_accounts = False
